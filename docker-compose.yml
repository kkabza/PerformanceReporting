version: '3.8'

services:
  # Flask application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_VERSION=${BUILD_VERSION:-BUILD-LOCAL}
    restart: unless-stopped
    volumes:
      - ./:/app:ro
      - app_data:/app/instance
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    networks:
      - app_network
      - db_network
    command: gunicorn --bind 0.0.0.0:8080 --workers 2 --timeout 60 app:app

  # Development server with hot reload
  app_dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    volumes:
      - ./:/app
      - app_data:/app/instance
    env_file:
      - .env.development
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - app_network
      - db_network
    command: flask run --host=0.0.0.0 --port=8080
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - FLASK_RUN_PORT=8080

  # Database
  db:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env.db
    networks:
      - db_network
    ports:
      - "5432:5432"

  # Redis for caching and sessions
  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - app_network
    ports:
      - "6379:6379"

  # Nginx for serving static files and as reverse proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app/static:/usr/share/nginx/html/static:ro
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - app_network

volumes:
  postgres_data:
  redis_data:
  app_data:

networks:
  app_network:
  db_network: 